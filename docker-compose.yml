# Generated by Grok, created by xAI, Version: Grok (Fast setting), Date: 2025-10-06
version: '3.8'

services:
  scheduling:
    build: ./services/scheduling
    ports:
      - "8002:8002"
    volumes:
      - ./music:/app/music:ro  # Read-only for potential song metadata access
    environment:
      - PYTHONUNBUFFERED=1  # Ensure logs are real-time
    networks:
      - neuralwaves-net

  moderator:
    build: ./services/moderator
    ports:
      - "8003:8003"
    volumes:
      - ./personas.yaml:/app/personas.yaml:ro
      - ./models:/app/models  # Mount AI models
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net

  playlist:
    build: ./services/playlist
    ports:
      - "8004:8004"
    volumes:
      - ./music:/app/music  # Needs access to music files
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net
    depends_on:
      - music_management  # Needs song data

  announcement:
    build: ./services/announcement
    ports:
      - "8005:8005"
    volumes:
      - ./music:/app/music  # For generating audio clips
      - ./models:/app/models  # For TTS models
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net
    depends_on:
      - music_management  # For credits

  interaction:
    build: ./services/interaction
    ports:
      - "8006:8006"
    volumes:
      - ./music:/app/music:ro  # Optional for song requests
      - ./models:/app/models  # For NLP models
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net

  streaming:
    build: ./services/streaming
    ports:
      - "8000:8000"  # Icecast streaming port
    volumes:
      - ./music:/app/music  # Access to music and announcement clips
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net
    depends_on:
      - playlist
      - announcement

  music_management:
    build: ./services/music_management
    ports:
      - "8007:8007"
    volumes:
      - ./music:/app/music  # Store downloaded tracks
      - ./services/music_management/config.template.yaml:/app/config.yaml:ro  # Use template
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - neuralwaves-net

networks:
  neuralwaves-net:
    driver: bridge

volumes:
  music:  # Persistent volume for music files